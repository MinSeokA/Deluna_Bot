const { ChatInputCommandInteraction, EmbedBuilder, PermissionFlagsBits, Colors, Embed } = require("discord.js");
const DiscordBot = require("../../client/DiscordBot");
const ApplicationCommand = require("../../structure/ApplicationCommand");

module.exports = new ApplicationCommand({
  command: {
    name: 'ÏÉÅÏ†êÍ¥ÄÎ¶¨',
    description: 'ÏÉÅÏ†êÏùÑ Í¥ÄÎ¶¨Ìï©ÎãàÎã§.',
    default_member_permissions: `${PermissionFlagsBits.Administrator}` || `${PermissionFlagsBits.ManageGuild}`,
    // ÏòµÏÖòÏ∂îÍ∞Ä ÏÉÅÏ†ê Í¥ÄÎ¶¨ Ï∂îÍ∞Ä, ÏàòÏ†ï, ÏÇ≠Ï†ú
    options: [
      {
        type: 1, // SUB_COMMAND
        name: 'Ï∂îÍ∞Ä',
        description: 'ÏÉÅÌíàÏùÑ Ï∂îÍ∞ÄÌï©ÎãàÎã§.',
      },
      {
        type: 1, // SUB_COMMAND
        name: 'ÏàòÏ†ï',
        description: 'ÏÉÅÌíàÏùÑ ÏàòÏ†ïÌï©ÎãàÎã§.',
      },
      {
        type: 1, // SUB_COMMAND
        name: 'ÏÇ≠Ï†ú',
        description: 'ÏÉÅÌíàÏùÑ ÏÇ≠Ï†úÌï©ÎãàÎã§.',
      }
    ],
  },
  /**
   * 
   * @param {DiscordBot} client 
   * @param {ChatInputCommandInteraction} interaction 
   */
  run: async (client, interaction) => {
    const subCommand = interaction.options.getSubcommand();


    switch (subCommand) {
      case 'Ï∂îÍ∞Ä':
        // ÏÉÅÌíà Ï∂îÍ∞Ä
        await interaction.showModal({
          custom_id: 'addShopItem',
          title: 'ÏÉÅÌíà Ï∂îÍ∞Ä',
          components: [
            {
              type: 1,  // Ï≤´ Î≤àÏß∏ Ìñâ
              components: [
                {
                  type: 4,
                  custom_id: 'item-name',
                  label: 'ÏÉÅÌíàÎ™Ö',
                  max_length: 50,  // ÏµúÎåÄ Í∏∏Ïù¥ Ï°∞Ï†ï
                  min_length: 1,    // ÏµúÏÜå Í∏∏Ïù¥ Ï°∞Ï†ï
                  placeholder: 'ÏÉÅÌíàÎ™ÖÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî!',
                  style: 1,         // Îã®Ïùº Ï§Ñ ÌÖçÏä§Ìä∏ ÌïÑÎìú
                  required: true,
                },
              ],
            },
            {
              type: 1,  // Îëê Î≤àÏß∏ Ìñâ
              components: [
                {
                  type: 4,
                  custom_id: 'item-price',
                  label: 'Í∞ÄÍ≤©',
                  max_length: 10,   // ÏµúÎåÄ Í∏∏Ïù¥ Ï°∞Ï†ï
                  min_length: 1,    // ÏµúÏÜå Í∏∏Ïù¥ Ï°∞Ï†ï
                  placeholder: 'Í∞ÄÍ≤©ÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî!',
                  style: 1,         // Îã®Ïùº Ï§Ñ ÌÖçÏä§Ìä∏ ÌïÑÎìú
                  required: true,
                },
              ],
            },
            {
              type: 1,  // ÏÑ∏ Î≤àÏß∏ Ìñâ
              components: [
                {
                  type: 4,
                  custom_id: 'item-stock',
                  label: 'ÏàòÎüâ',
                  max_length: 10,    // ÏµúÎåÄ Í∏∏Ïù¥ Ï°∞Ï†ï
                  min_length: 1,    // ÏµúÏÜå Í∏∏Ïù¥ Ï°∞Ï†ï
                  placeholder: 'ÏàòÎüâÏùÑ ÏûÖÎ†•ÌïòÏÑ∏Ïöî!',
                  style: 1,         // Îã®Ïùº Ï§Ñ ÌÖçÏä§Ìä∏ ÌïÑÎìú
                  required: true,
                },
              ],
            },
          ],
        });


        break;
      case 'ÏàòÏ†ï':
        // ÏÉÅÌíà ÏàòÏ†ï
        break;
      case 'ÏÇ≠Ï†ú':
        // ÏÉÅÌíà ÏÇ≠Ï†ú
        const itemsDeleteEmbed = new EmbedBuilder()
          .setColor(Colors.Blue)
          .setDescription(`
          > üõí | ÏÉÅÌíàÏùÑ ÏÇ≠Ï†úÌï©ÎãàÎã§.

          > INFO | ÏÉÅÌíàÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.
          > INFO | ÏÇ≠Ï†úÎêú ÏÉÅÌíàÏùÄ Î≥µÍµ¨Ìï† Ïàò ÏóÜÏäµÎãàÎã§.
          > INFO | ÏÇ≠Ï†úÎêú ÏÉÅÌíàÏùÄ ÏÇ¨Ïö©ÏûêÏóêÍ≤å Î≥¥Ïù¥ÏßÄ ÏïäÏäµÎãàÎã§.

          > üìå | ÏÉÅÌíàÏùÑ ÏÇ≠Ï†úÌïòÎ†§Î©¥ ÏïÑÎûòÏóêÏÑú ÏÉÅÌíàÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî.

          `)
          .setFooter({
            text: `ÏöîÏ≤≠Ïûê: ${interaction.user.username}`,
          })
          .setTimestamp();

        const result = await client.api.getData(`shop/items/${interaction.guildId}`);

        if (result || result.status) {
          // ÏÑ†ÌÉù Î©îÎâ¥ÏôÄ Î≤ÑÌäº Ï∂îÍ∞Ä
          await interaction.reply({
            embeds: [
              itemsDeleteEmbed
            ],
            components: [
              {
                type: 1,
                components: [
                  {
                    type: 3, // String Select Menu
                    custom_id: 'deleteShopItem.select',
                    placeholder: 'ÏÉÅÌíàÏùÑ ÏÑ†ÌÉùÌïòÏÑ∏Ïöî...',
                    options: result.data[0].shop.items.slice(0, 20).map((item, index) => ({
                      label: `${item.name} - ${item.price.toLocaleString()}Ïõê | Ïû¨Í≥†: ${item.stock.toLocaleString()}Í∞ú`,
                      value: item.itemId
                    }))
                  }
                ]
              }
            ],
            ephemeral: true,
          });

        }
        break;
    }
  }
}).toJSON();