const { ChatInputCommandInteraction, EmbedBuilder, Colors } = require("discord.js");
const DiscordBot = require("../../client/DiscordBot");
const ApplicationCommand = require("../../structure/ApplicationCommand");
const { info } = require("../../utils/Console");

module.exports = new ApplicationCommand({
    command: {
        name: '재생목록',
        description: '현재 재생목록을 보여줍니다.'
    },
    options: {
        cooldown: 5000
    },
    /**
     * 
     * @param {DiscordBot} client 
     * @param {ChatInputCommandInteraction} interaction 
     */
    run: async (client, interaction) => {
        const player = client.music.getPlayer(interaction.guildId);

        if (!player) {
            return interaction.reply({
                embeds: [
                    new EmbedBuilder()
                        .setColor(Colors.Red)
                        .setDescription(`🚫 | 재생중인 음악이 없습니다.`),
                ],
                ephemeral: true,
            });
        }

        const current = player.queue.current;

        const queueEmbed = new EmbedBuilder()
        .setColor(Colors.Blue)
        .setTitle(`🎵 | 현재 재생 중인 음악: ${current?.info.title}`)
        .setDescription(
            `> **현재 재생 중인 음악**\n` +
            `> 🎶 [${current?.info.title}](${current?.info.uri}) - \`${current?.info.author}\`\n\n` +
            `> **다음 트랙들** (${player.queue.tracks.length > 20 ? "20개" : `${player.queue.tracks.length}개`}):\n` +
            player.queue.tracks.slice(0, 20)
                .map((t, i) => `> **${i + 1}.** [${t.info.title}](${t.info.uri}) - ${t.info.author}`).join("\n")
        )
        .setFooter({
            text: `총 ${player.queue.tracks.length}개의 트랙이 대기 중입니다.`,
        })
        .setTimestamp();
    
        interaction.reply({
            embeds: [
                queueEmbed
            ],
            ephemeral: true,
        });
    }
}).toJSON();